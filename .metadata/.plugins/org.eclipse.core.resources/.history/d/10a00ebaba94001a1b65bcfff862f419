package thai.test.controller;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.ResultMatcher;
import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import thai.controller.LoginController;
import thai.filter.CORSFilter;
import thai.service.UserService;


@RunWith(SpringRunner.class)
//@WebAppConfiguration

public class test2 {

	private MockMvc mockMvc;
	
	@Mock
	UserService userService;
	
	@InjectMocks
	LoginController loginController;

	 @Before
	 public void init(){
	        MockitoAnnotations.initMocks(this);
	        mockMvc = MockMvcBuilders
	                .standaloneSetup(loginController)
	                .addFilters(new CORSFilter())
	                .build();
	        
	    }
/*
	 @Test
	public void testForm() throws Exception {
		 
		 ResultMatcher ok = MockMvcResultMatchers.status()
                 .isOk();
		 
		 MockHttpServletRequestBuilder builder = MockMvcRequestBuilders.get("/login");
		 
		 mockMvc.perform(builder).andExpect(ok);
		 

	}
	 */
	 @Test
	public void testForm() throws Exception {
			 

	}
}
