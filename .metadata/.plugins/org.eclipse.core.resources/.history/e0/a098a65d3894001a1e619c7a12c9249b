package thai.test.controller;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpSession;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.runners.MockitoJUnitRunner;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.RequestBuilder;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;

import thai.controller.LoginController;
import thai.entity.User;
import thai.service.UserService;

@RunWith(MockitoJUnitRunner.class)
public class LoginTest {

	@Mock
	UserService userService;
	
	@Mock
	HttpSession session;
	 
	@Mock
	ModelMap model;
	
	@Mock
	BindingResult result;

	@InjectMocks
	LoginController loginController;
	

	
	@Test
	public void showformLoginTest() throws Exception{
	
	Assert.assertEquals(loginController.formLogin().getViewName(), "login/login");
	
	}
	
	@Test
	public void checkLoginTest() { 
	
		User user = new User(null,"admin1","123456");
	
		Mockito.when(userService.checkLogin(user)).thenReturn(true);
		
		Assert.assertEquals(loginController.checkLogin(model, session, user, result).getViewName(), "redirect:/students");

	}
	
	


	
}
